<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">

    <context:annotation-config />
    <context:component-scan base-package="com.restaurant.dinner"/>

    <!-- 任务线程池大小 -->
    <task:scheduler id="defaultScheduler" pool-size="20"/><!-- 根据实际任务数量配置线程池大小 -->
    <!-- 自动扫描 @Scheduled 注解，注入定时任务 -->
    <task:annotation-driven scheduler="defaultScheduler" />

    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <!-- RPC服务相关配置 -->
                <value>classpath:rpc-provider.properties</value>
                <!-- 导入core-business模块配置 --><!--添加依赖jar中的资源时路径必须以"/"开头-->
                <value>classpath*:/conf/properties/db-config.properties</value>
            </list>
        </property>
    </bean>

    <!-- 导入core-business模块Spring配置文件 在propertyConfigurer中需要导入db-config.properties --><!--添加依赖jar中的资源时路径必须以"/"开头-->
    <import resource="classpath*:/conf/spring-core-business.xml" />

    <!-- 启动Rpc服务端 -->
    <bean id="rpcServer" class="com.kitchen.rpc.server.RpcServer" scope="singleton" lazy-init="false">
        <constructor-arg name="serverAddress" value="${rpc.provider.address}"/><!--设置服务提供者（服务器）的地址-->
        <constructor-arg name="serverWeight" value="${rpc.provider.weight}"/><!--设置服务提供者（服务器）的权重-->
        <constructor-arg name="registryCenterAddress" value="${rpc.registry.address}"/><!--注册中心地址-->
        <constructor-arg name="open" value="${rpc.provider.open}"/><!-- 是否开启Rpc服务 -->
    </bean>

</beans>