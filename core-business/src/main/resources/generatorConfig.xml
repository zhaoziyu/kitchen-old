<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
    <!--数据库驱动-->
    <classPathEntry location="D:/project/repository_maven/repository/mysql/mysql-connector-java/5.1.39/mysql-connector-java-5.1.39.jar"/>

    <context id="defaultGenerator" targetRuntime="MyBatis3">
        <!-- 是否去除生成注释 true：去除 false：生成 -->
        <commentGenerator>
            <property name="suppressDate" value="true"/>
            <property name="suppressAllComments" value="true"/>
        </commentGenerator>
        <!--数据库链接地址账号密码-->
        <jdbcConnection
                driverClass="com.mysql.jdbc.Driver"
                connectionURL="jdbc:mysql://127.0.0.1:3306/kitchen_db?characterEncoding=UTF8&amp;useUnicode=true"
                userId="root"
                password="zhaozy">
        </jdbcConnection>

        <javaTypeResolver>
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>

        <!-- PO对象存放位置 -->
        <javaModelGenerator targetProject="src/main/java" targetPackage="mybatis.generate.po">
            <!-- 是否添加PO类的构造函数 -->
            <property name="constructorBased" value="false"/>

            <!-- 是否允许子包，即targetPackage.schemaName.tableName -->
            <property name="enableSubPackages" value="false"/>

            <!-- 是否对类字符类型的数据进行trim操作 -->
            <property name="trimStrings" value="true"/>

            <!-- 生成类的继承和接口 -->
            <property name="rootClass" value="com.restaurant.dinner.api.pojo.po.PoBase" />

        </javaModelGenerator>
        <!-- mapper.xml映射文件存放位置 -->
        <sqlMapGenerator targetProject="src/main/java" targetPackage="mybatis.generate.dao">
            <!-- 是否允许子包，即targetPackage.schemaName.tableName -->
            <property name="enableSubPackages" value="false"/>
        </sqlMapGenerator>
        <!--生成Dao类存放位置-->
        <javaClientGenerator targetProject="src/main/java" targetPackage="mybatis.generate.dao" type="XMLMAPPER">
            <!-- 是否允许子包，即targetPackage.schemaName.tableName -->
            <property name="enableSubPackages" value="false"/>
            <!-- 生成类的继承接口 -->
            <property name="rootInterface" value=""/>
        </javaClientGenerator>

        <!-- 生成对应表及类名
             属性说明如下：
             tableName：可使用%作为通配符
             enableInsert：指定是否生成Insert语句。
             enableSelectByPrimaryKey：指定是否生成通过主键查询的语句。 无论这个怎么设置，当表不存在主键的时候，不会生成这个语句。
             enableDeleteByPrimaryKey：指定是否生成通过主键删除的语句。 无论这个怎么设置，当表不存在主键的时候，不会生成这个语句。
             enableSelectByExample：指定是否生成通过Example查询的语句。 这个语句支持运行时生成多种不同条件的动态查询。
             enableUpdateByPrimaryKey：指定是否生成通过主键更新的语句。 无论这个怎么设置，当表不存在主键的时候，不会生成这个语句。
             enableDeleteByExample：指定是否生成通过Example删除的语句。 这个语句支持运行时生成多种不同的条件动态删除。
             enableCountByExample：指定是否生成通过Example查询总数的语句。 这个语句将返回满足Example条件的数据总数。
             enableUpdateByExample：指定是否生成通过Example更新的语句。 这个语句将更新满足Example条件的数据。 如果设置为True,UpdateByExampleSelective语句也会生成。 这个语句只会更新那些参数中值不为null的的列。
             selectByPrimaryKeyQueryId：这个值会以"'<value>' as QUERYID"这种形式被添加到通过主键查询的语句的select列中。 这可能对在运行时的DBA跟踪工具中标记查询有用。 如果您使用这个值，您需要为MBG生成的每一个查询指定一个唯一的id。
             selectByExampleQueryId：这个值会以"'<value>' as QUERYID"这种形式被添加到通过Example查询的语句的select列中。 这可能对在运行时的DBA跟踪工具中标记查询有用。 如果您使用这个值，您需要为MBG生成的每一个查询指定一个唯一的id。
        -->
        <table
                tableName="%"

                enableInsert="true"
                enableSelectByPrimaryKey="true"
                enableUpdateByPrimaryKey="true"

                enableDeleteByPrimaryKey="false"
                enableSelectByExample="false"
                enableDeleteByExample="false"
                enableCountByExample="false"
                enableUpdateByExample="false"
                selectByPrimaryKeyQueryId=""
                selectByExampleQueryId="">
        </table>
    </context>
</generatorConfiguration>